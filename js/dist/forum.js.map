{"version":3,"sources":["webpack://@clarkwinkelmann/who-read/webpack/bootstrap","webpack://@clarkwinkelmann/who-read/external \"flarum.core.compat['forum/app']\"","webpack://@clarkwinkelmann/who-read/external \"flarum.core.compat['common/extend']\"","webpack://@clarkwinkelmann/who-read/external \"flarum.core.compat['common/utils/extractText']\"","webpack://@clarkwinkelmann/who-read/external \"flarum.core.compat['common/Model']\"","webpack://@clarkwinkelmann/who-read/external \"flarum.core.compat['common/components/Button']\"","webpack://@clarkwinkelmann/who-read/external \"flarum.core.compat['common/components/Badge']\"","webpack://@clarkwinkelmann/who-read/external \"flarum.core.compat['common/components/Tooltip']\"","webpack://@clarkwinkelmann/who-read/external \"flarum.core.compat['common/helpers/avatar']\"","webpack://@clarkwinkelmann/who-read/external \"flarum.core.compat['common/helpers/listItems']\"","webpack://@clarkwinkelmann/who-read/external \"flarum.core.compat['common/utils/humanTime']\"","webpack://@clarkwinkelmann/who-read/external \"flarum.core.compat['common/models/Discussion']\"","webpack://@clarkwinkelmann/who-read/external \"flarum.core.compat['forum/components/Post']\"","webpack://@clarkwinkelmann/who-read/external \"flarum.core.compat['common/helpers/icon']\"","webpack://@clarkwinkelmann/who-read/external \"flarum.core.compat['forum/states/DiscussionListState']\"","webpack://@clarkwinkelmann/who-read/external \"flarum.core.compat['forum/components/DiscussionHero']\"","webpack://@clarkwinkelmann/who-read/external \"flarum.core.compat['common/utils/ItemList']\"","webpack://@clarkwinkelmann/who-read/external \"flarum.core.compat['common/components/Modal']\"","webpack://@clarkwinkelmann/who-read/external \"flarum.core.compat['common/components/Link']\"","webpack://@clarkwinkelmann/who-read/external \"flarum.core.compat['common/helpers/username']\"","webpack://@clarkwinkelmann/who-read/external \"flarum.core.compat['common/helpers/userOnline']\"","webpack://@clarkwinkelmann/who-read/external \"flarum.core.compat['forum/components/DiscussionList']\"","webpack://@clarkwinkelmann/who-read/external \"flarum.core.compat['forum/components/DiscussionListItem']\"","webpack://@clarkwinkelmann/who-read/external \"flarum.core.compat['forum/components/CommentPost']\"","webpack://@clarkwinkelmann/who-read/external \"flarum.core.compat['forum/utils/DiscussionControls']\"","webpack://@clarkwinkelmann/who-read/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@clarkwinkelmann/who-read/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@clarkwinkelmann/who-read/./src/forum/models/UserState.js","webpack://@clarkwinkelmann/who-read/./src/forum/utils/appendReaderBadges.js","webpack://@clarkwinkelmann/who-read/./src/forum/components/AvatarSummary.js","webpack://@clarkwinkelmann/who-read/./src/forum/components/AvatarsDetails.js","webpack://@clarkwinkelmann/who-read/./src/forum/components/ReadersModal.js","webpack://@clarkwinkelmann/who-read/./src/forum/utils/filterVeryBehind.js","webpack://@clarkwinkelmann/who-read/./src/forum/components/UnreadButton.js","webpack://@clarkwinkelmann/who-read/./src/forum/index.js","webpack://@clarkwinkelmann/who-read/./src/forum/addInDiscussionHero.js","webpack://@clarkwinkelmann/who-read/./src/forum/addInDiscussionList.js","webpack://@clarkwinkelmann/who-read/./src/forum/addInPostStream.js","webpack://@clarkwinkelmann/who-read/./src/forum/addUnreadControls.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","flarum","core","compat","_setPrototypeOf","setPrototypeOf","__proto__","_inheritsLoose","subClass","superClass","constructor","UserState","last_read_at","Model","attribute","last_read_post_number","subscription","unread","user","hasOne","translationPrefix","badges","reader","extensions","add","Badge","component","label","app","translator","trans","icon","type","forum","AvatarSummary","view","vnode","LIMIT","attrs","readers","extendable","discussion","map","index","showAll","howManyMore","length","title","extractText","count","onclick","event","stopPropagation","ItemList","appendReaderBadges","outdated","lastPostNumber","toolTipTranslationKey","Tooltip","text","ago","humanTime","className","avatar","listItems","toArray","AvatarsDetails","Link","href","route","userOnline","username","ReadersModal","content","this","section","dataKey","translationKey","Modal","filter","behindTreshold","UnreadButton","Button","save","whoReadUnread","then","redraw","initializers","store","models","Discussion","clarkwinkelmannWhoReaders","hasMany","extend","items","promise","attributes","lastReadPostNumber","DiscussionListState","params","include","push","DiscussionHero","filterVeryBehind","preventDefault","modal","show","readersEnd","readersBehind","DiscussionList","DiscussionListItem","Post","subtree","check","post","JSON","stringify","id","CommentPost","forEach","Component","data","relationships","posts","postIds","currentPostIndex","indexOf","nextPostId","nextPost","getById","readersUntilHereOnly","number","readersFurther","totalReadersWhoHaveSeenThisPost","DiscussionControls"],"mappings":"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","file":"forum.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 27);\n","module.exports = flarum.core.compat['forum/app'];","module.exports = flarum.core.compat['common/extend'];","module.exports = flarum.core.compat['common/utils/extractText'];","module.exports = flarum.core.compat['common/Model'];","module.exports = flarum.core.compat['common/components/Button'];","module.exports = flarum.core.compat['common/components/Badge'];","module.exports = flarum.core.compat['common/components/Tooltip'];","module.exports = flarum.core.compat['common/helpers/avatar'];","module.exports = flarum.core.compat['common/helpers/listItems'];","module.exports = flarum.core.compat['common/utils/humanTime'];","module.exports = flarum.core.compat['common/models/Discussion'];","module.exports = flarum.core.compat['forum/components/Post'];","module.exports = flarum.core.compat['common/helpers/icon'];","module.exports = flarum.core.compat['forum/states/DiscussionListState'];","module.exports = flarum.core.compat['forum/components/DiscussionHero'];","module.exports = flarum.core.compat['common/utils/ItemList'];","module.exports = flarum.core.compat['common/components/Modal'];","module.exports = flarum.core.compat['common/components/Link'];","module.exports = flarum.core.compat['common/helpers/username'];","module.exports = flarum.core.compat['common/helpers/userOnline'];","module.exports = flarum.core.compat['forum/components/DiscussionList'];","module.exports = flarum.core.compat['forum/components/DiscussionListItem'];","module.exports = flarum.core.compat['forum/components/CommentPost'];","module.exports = flarum.core.compat['forum/utils/DiscussionControls'];","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","import Model from 'flarum/common/Model';\n\nexport default class UserState extends Model {\n    last_read_at = Model.attribute('last_read_at');\n    last_read_post_number = Model.attribute('last_read_post_number');\n    subscription = Model.attribute('subscription');\n    unread = Model.attribute('unread');\n    user = Model.hasOne('user');\n}\n","import app from 'flarum/forum/app';\nimport Badge from 'flarum/common/components/Badge';\n\n/* global flarum */\n\nconst translationPrefix = 'clarkwinkelmann-who-read.forum.badges.';\n\nexport default function (badges, reader) {\n    if (flarum.extensions['flarum-subscriptions']) {\n        switch (reader.subscription()) {\n            case 'follow':\n                badges.add('subscriptions-follow', Badge.component({\n                    label: app.translator.trans(translationPrefix + 'following'),\n                    icon: 'fas fa-star',\n                    type: 'following',\n                }));\n                break;\n            case 'ignore':\n                badges.add('subscriptions-ignoring', Badge.component({\n                    label: app.translator.trans(translationPrefix + 'ignoring'),\n                    icon: 'far fa-eye-slash',\n                    type: 'ignoring',\n                }));\n                break;\n        }\n    }\n\n    if (reader.unread()) {\n        badges.add('who-read-unread', Badge.component({\n            type: 'who-read-unread',\n            icon: app.forum.attribute('who-read.unreadIcon'),\n            label: app.translator.trans(translationPrefix + 'unread'),\n        }));\n    }\n}\n","import app from 'flarum/forum/app';\nimport Tooltip from 'flarum/common/components/Tooltip';\nimport avatar from 'flarum/common/helpers/avatar';\nimport listItems from 'flarum/common/helpers/listItems';\nimport extractText from 'flarum/common/utils/extractText';\nimport humanTime from 'flarum/common/utils/humanTime';\nimport ItemList from 'flarum/common/utils/ItemList';\nimport appendReaderBadges from '../utils/appendReaderBadges';\n\n/* global m, $ */\n\nconst translationPrefix = 'clarkwinkelmann-who-read.forum.';\n\nexport default class AvatarSummary {\n    view(vnode) {\n        const LIMIT = app.forum.attribute('who-read.maxVisible');\n\n        const {readers, extendable, discussion} = vnode.attrs;\n\n        return m('ul.WhoRead-list.WhoRead-summary', readers.map((reader, index) => {\n            if (!this.showAll) {\n                if (index === LIMIT) {\n                    const howManyMore = readers.length - LIMIT;\n\n                    return m('span.Avatar.WhoRead-more', {\n                        // Not using a tooltip here because it kind of breaks if a tooltip is open while Mithril redraws\n                        title: extractText(app.translator.trans(translationPrefix + 'more.' + (extendable ? 'show' : 'info'), {\n                            count: howManyMore,\n                        })),\n                        onclick: event => {\n                            if (extendable) {\n                                event.stopPropagation();\n                                this.showAll = true;\n                            }\n                        },\n                    }, '+' + howManyMore);\n                }\n\n                if (index >= LIMIT) {\n                    return null;\n                }\n            }\n\n            const user = reader.user();\n\n            // Most likely this shouldn't happen, unless the database integrity is broken\n            if (!user) {\n                return null;\n            }\n\n            const badges = new ItemList();\n\n            appendReaderBadges(badges, reader);\n\n            const outdated = reader.unread() || (discussion && reader.last_read_post_number() < discussion.lastPostNumber());\n\n            let toolTipTranslationKey = 'last-read-at';\n\n            if (discussion) {\n                toolTipTranslationKey = outdated ? 'last-read-at-behind' : 'last-read-at-up-to-date';\n            }\n\n            return m('li.WhoRead-item', m(Tooltip, {\n                text: extractText(app.translator.trans(translationPrefix + 'tooltip.' + toolTipTranslationKey, {\n                    user,\n                    ago: humanTime(reader.last_read_at()),\n                })),\n            }, m('.WhoRead-avatar', {\n                className: outdated ? 'WhoRead-avatar--outdated' : '',\n            }, [\n                avatar(user),\n                m('ul.badges', listItems(badges.toArray())),\n            ])));\n        }));\n    }\n}\n","import app from 'flarum/forum/app';\nimport Link from 'flarum/common/components/Link';\nimport Tooltip from 'flarum/common/components/Tooltip';\nimport avatar from 'flarum/common/helpers/avatar';\nimport listItems from 'flarum/common/helpers/listItems';\nimport username from 'flarum/common/helpers/username';\nimport userOnline from 'flarum/common/helpers/userOnline';\nimport extractText from 'flarum/common/utils/extractText';\nimport humanTime from 'flarum/common/utils/humanTime';\nimport appendReaderBadges from '../utils/appendReaderBadges';\n\n/* global m, $ */\n\nexport default class AvatarsDetails {\n    view(vnode) {\n        return m('ul.WhoRead-list.WhoRead-details', vnode.attrs.readers.map(reader => {\n            const user = reader.user();\n\n            // Most likely this shouldn't happen, unless the database integrity is broken\n            if (!user) {\n                return null;\n            }\n\n            const badges = user.badges();\n\n            appendReaderBadges(badges, reader);\n\n            return m('li.WhoRead-item', m(Tooltip, {\n                text: extractText(app.translator.trans('clarkwinkelmann-who-read.forum.tooltip.last-read-at', {\n                    user,\n                    ago: humanTime(reader.last_read_at()),\n                })),\n            }, m(Link, {\n                href: app.route.user(user),\n                'data-container': 'body', // Bootstrap tooltip option so we overflow .Modal edge\n            }, [\n                m('.WhoRead-avatar', [\n                    avatar(user),\n                    m('ul.badges', listItems(badges.toArray())),\n                ]),\n                m('.WhoRead-user', [\n                    userOnline(user),\n                    username(user),\n                ]),\n            ])));\n        }));\n    }\n}\n","import app from 'flarum/forum/app';\nimport Modal from 'flarum/common/components/Modal';\nimport AvatarsDetails from './AvatarsDetails';\n\n/* global m */\n\nconst translationPrefix = 'clarkwinkelmann-who-read.forum.modal.';\n\nexport default class ReadersModal extends Modal {\n    title() {\n        return app.translator.trans(translationPrefix + 'title');\n    }\n\n    content() {\n        return m('.Modal-body', [\n            this.section('readersUntilHereOnly', 'up-to-this-post'),\n            this.section('readersFurther', 'past-this-post'),\n            this.section('readersEnd', 'to-the-end'),\n            this.section('readersBehind', 'behind'),\n        ]);\n    }\n\n    section(dataKey, translationKey) {\n        if (!this.attrs[dataKey] || !this.attrs[dataKey].length) {\n            return null;\n        }\n\n        return [\n            m('h3', app.translator.trans(translationPrefix + translationKey)),\n            m(AvatarsDetails, {\n                readers: this.attrs[dataKey],\n            }),\n        ];\n    }\n}\n","import app from 'flarum/forum/app';\n\nexport default function (readers, discussion) {\n    return readers.filter(reader => {\n        // The last post number might be null if the user marked as unread. In this case we hide them\n        if (reader.last_read_post_number() === null) {\n            return false;\n        }\n\n        const behindTreshold = app.forum.attribute('who-read.hideWhenBehind');\n\n        if (!behindTreshold) {\n            return true;\n        }\n\n        return reader.last_read_post_number() > discussion.lastPostNumber() - behindTreshold;\n    });\n}\n","import app from 'flarum/forum/app';\nimport Button from 'flarum/common/components/Button';\n\n/* global m */\n\nexport default class UnreadButton {\n    view(vnode) {\n        const {discussion, className} = vnode.attrs;\n\n        const unread = !!discussion.attribute('whoReadUnread');\n\n        return Button.component({\n            className,\n            icon: app.forum.attribute('who-read.unreadIcon'),\n            onclick() {\n                discussion.save({\n                    whoReadUnread: !unread,\n                }).then(() => {\n                    m.redraw();\n                });\n            },\n        }, app.translator.trans('clarkwinkelmann-who-read.forum.controls.' + (unread ? 'remove' : 'set') + '-unread'));\n    }\n}\n","import {extend} from 'flarum/common/extend';\nimport app from 'flarum/forum/app';\nimport DiscussionListState from 'flarum/forum/states/DiscussionListState';\nimport Discussion from 'flarum/common/models/Discussion';\nimport Badge from 'flarum/common/components/Badge';\nimport Model from 'flarum/common/Model';\nimport UserState from './models/UserState';\nimport addInDiscussionHero from './addInDiscussionHero';\nimport addInDiscussionList from './addInDiscussionList';\nimport addInPostStream from './addInPostStream';\nimport addUnreadControls from './addUnreadControls';\n\n/* global m */\n\napp.initializers.add('clarkwinkelmann-who-read', () => {\n    app.store.models['clarkwinkelmann-who-readers'] = UserState;\n    Discussion.prototype.clarkwinkelmannWhoReaders = Discussion.hasMany('clarkwinkelmannWhoReaders');\n\n    extend(Discussion.prototype, 'badges', function (items) {\n        if (this.attribute('whoReadUnread')) {\n            items.add('who-read-unread', Badge.component({\n                type: 'who-read-unread',\n                icon: app.forum.attribute('who-read.unreadIcon'),\n                label: app.translator.trans('clarkwinkelmann-who-read.forum.badges.unread'),\n            }));\n        }\n    });\n\n    // When Flarum sets the last read post in DiscussionPage.positionChanged, we want to trigger a redraw after the request finishes\n    extend(Model.prototype, 'save', function (promise, attributes) {\n        if (attributes.lastReadPostNumber) {\n            promise.then(() => {\n                m.redraw();\n            });\n        }\n    });\n\n    extend(DiscussionListState.prototype, 'requestParams', function (params) {\n        if (!app.forum.attribute('who-read.canSee')) {\n            return;\n        }\n\n        params.include.push('clarkwinkelmannWhoReaders.user.groups');\n    });\n\n    addInDiscussionHero();\n    addInDiscussionList();\n    addInPostStream();\n    addUnreadControls();\n});\n","import {extend} from 'flarum/common/extend';\nimport app from 'flarum/forum/app';\nimport Button from 'flarum/common/components/Button';\nimport DiscussionHero from 'flarum/forum/components/DiscussionHero';\nimport AvatarSummary from './components/AvatarSummary';\nimport ReadersModal from './components/ReadersModal';\nimport filterVeryBehind from './utils/filterVeryBehind';\n\n/* global m */\n\nexport default function () {\n    extend(DiscussionHero.prototype, 'items', function (items) {\n        if (!app.forum.attribute('who-read.showInHero')) {\n            return;\n        }\n\n        const {discussion} = this.attrs;\n\n        let readers = discussion.clarkwinkelmannWhoReaders();\n\n        if (!readers) {\n            return;\n        }\n\n        readers = filterVeryBehind(readers, discussion);\n\n        if (readers.length) {\n            items.add('who-read', Button.component({\n                className: 'Button Button--link',\n                onclick: event => {\n                    event.preventDefault();\n\n                    app.modal.show(ReadersModal, {\n                        readersEnd: readers.filter(\n                            reader => reader.last_read_post_number() >= discussion.lastPostNumber()\n                        ),\n                        readersBehind: readers.filter(\n                            reader => reader.last_read_post_number() < discussion.lastPostNumber()\n                        ),\n                    });\n                },\n            }, m(AvatarSummary, {\n                readers,\n                discussion,\n                extendable: true,\n            })));\n        }\n    });\n}\n","import {extend} from 'flarum/common/extend';\nimport app from 'flarum/forum/app';\nimport DiscussionList from 'flarum/forum/components/DiscussionList';\nimport DiscussionListItem from 'flarum/forum/components/DiscussionListItem';\nimport AvatarSummary from './components/AvatarSummary';\nimport filterVeryBehind from './utils/filterVeryBehind';\n\n/* global m */\n\nexport default function () {\n    extend(DiscussionList.prototype, 'requestParams', function (params) {\n        if (!app.forum.attribute('who-read.showInDiscussionList')) {\n            return;\n        }\n\n        params.include.push('clarkwinkelmannWhoReaders.user.groups');\n    });\n\n    extend(DiscussionListItem.prototype, 'infoItems', function (items) {\n        if (!app.forum.attribute('who-read.showInDiscussionList')) {\n            return;\n        }\n\n        const {discussion} = this.attrs;\n\n        let readers = discussion.clarkwinkelmannWhoReaders();\n\n        if (!readers) {\n            return;\n        }\n\n        readers = filterVeryBehind(readers, discussion);\n\n        if (readers.length) {\n            items.add('who-read', m(AvatarSummary, {\n                readers,\n                discussion,\n            }), -120);\n        }\n    });\n}\n","import {extend} from 'flarum/common/extend';\nimport app from 'flarum/forum/app';\nimport Button from 'flarum/common/components/Button';\nimport CommentPost from 'flarum/forum/components/CommentPost';\nimport Post from 'flarum/forum/components/Post';\nimport icon from 'flarum/common/helpers/icon';\nimport extractText from 'flarum/common/utils/extractText';\nimport AvatarSummary from './components/AvatarSummary';\nimport ReadersModal from './components/ReadersModal';\nimport UnreadButton from './components/UnreadButton';\n\n/* global m */\n\nconst translationPrefix = 'clarkwinkelmann-who-read.forum.footer.';\n\nexport default function () {\n    extend(Post.prototype, 'oninit', function () {\n        if (!app.forum.attribute('who-read.showBetweenPosts')) {\n            return;\n        }\n\n        this.subtree.check(\n            // Refresh if the user toggles between read and unread\n            () => this.attrs.post.discussion().attribute('whoReadUnread'),\n            // Make the post redraws when the last read post number changes,\n            // so that scrolling through the discussion reflects your own read status\n            () => this.attrs.post.discussion().lastReadPostNumber(),\n            // Because of some odd magic in Flarum's store, discussion.whoReadUnread and discussion.lastReadPostNumber\n            // are actually updated just slightly before the relationship and a redraw triggers in between\n            // So this makes the post redraw too early and since the relationship is used to render the avatars\n            // and badges they won't be up to date. So we need to use the relationship as source of data as well\n            () => JSON.stringify((this.attrs.post.discussion().clarkwinkelmannWhoReaders() || []).map(reader => [\n                // The state ID will contain the user ID, so together with the other informations we can be sure it's a different state\n                reader.id(),\n                // Fixes the unread badge appearing out of sync on the user avatars\n                reader.unread(),\n                // Fixes the avatars not updating as you scroll\n                reader.last_read_post_number(),\n            ]))\n        );\n    });\n\n    // For some reason extending Post is not enough to work for CommentPost. So we also add it to CommentPost\n    [Post, CommentPost].forEach(Component => {\n        extend(Component.prototype, 'footerItems', function (items) {\n            if (!app.forum.attribute('who-read.showBetweenPosts')) {\n                return;\n            }\n\n            const {post} = this.attrs;\n            const discussion = post.discussion();\n\n            // If the post is loaded on a user profile, we don't have access to the list\n            // of post IDs in that discussion. If that's the case, skip\n            // We can't just check the output of discussion.postIds() because on the\n            //  profile page it throws an exception because relationships is undefined\n            if (!discussion.data.relationships || !discussion.data.relationships.posts) {\n                return;\n            }\n\n            const postIds = discussion.postIds();\n            const currentPostIndex = postIds.indexOf(post.id());\n\n            if (currentPostIndex !== -1 && currentPostIndex + 1 < postIds.length) {\n                const nextPostId = postIds[currentPostIndex + 1];\n                const nextPost = app.store.getById('posts', nextPostId);\n\n                if (nextPost) {\n                    const readersUntilHereOnly = discussion.clarkwinkelmannWhoReaders().filter(\n                        reader => reader.last_read_post_number() >= post.number() && reader.last_read_post_number() < nextPost.number()\n                    );\n\n                    const readersFurther = discussion.clarkwinkelmannWhoReaders().filter(\n                        reader => reader.last_read_post_number() >= nextPost.number()\n                    );\n\n                    const totalReadersWhoHaveSeenThisPost = readersUntilHereOnly.length + readersFurther.length;\n\n                    let title = extractText(app.translator.trans(translationPrefix + 'read-this-post', {\n                        count: totalReadersWhoHaveSeenThisPost,\n                    }));\n\n                    if (totalReadersWhoHaveSeenThisPost > 0) {\n                        title += '. ' + extractText(app.translator.trans(translationPrefix + 'read-no-further', {\n                            count: readersUntilHereOnly.length,\n                        }));\n                    }\n\n                    items.add('who-read', Button.component({\n                        className: 'Button Button--link',\n                        onclick: event => {\n                            event.preventDefault();\n\n                            app.modal.show(ReadersModal, {\n                                readersUntilHereOnly,\n                                readersFurther,\n                            });\n                        },\n                        title,\n                    }, [\n                        app.forum.attribute('who-read.showCountOfReadersWhoStopped') ? readersUntilHereOnly.length : totalReadersWhoHaveSeenThisPost,\n                        ' ',\n                        icon('fas fa-check-double'),\n                        ' ',\n                        m(AvatarSummary, {\n                            readers: readersUntilHereOnly,\n                        }),\n                    ]));\n                }\n            } else if (currentPostIndex === postIds.length - 1) {\n                // If this is the last post\n\n                const readersEnd = discussion.clarkwinkelmannWhoReaders().filter(\n                    reader => reader.last_read_post_number() >= discussion.lastPostNumber()\n                );\n\n                items.add('who-read', Button.component({\n                    className: 'Button Button--link',\n                    onclick: event => {\n                        event.preventDefault();\n\n                        app.modal.show(ReadersModal, {\n                            readersEnd,\n                        });\n                    },\n                    title: extractText(app.translator.trans(translationPrefix + 'read-to-end', {\n                        count: readersEnd.length,\n                    })),\n                }, [\n                    readersEnd.length,\n                    ' ',\n                    icon('fas fa-check-double'),\n                    ' ',\n                    m(AvatarSummary, {\n                        readers: readersEnd,\n                    }),\n                ]));\n\n                if (discussion.attribute('whoReadCanMarkUnread')) {\n                    items.add('who-read-unread', m(UnreadButton, {\n                        className: 'Button',\n                        discussion,\n                    }));\n                }\n            }\n        });\n    });\n}\n","import {extend} from 'flarum/common/extend';\nimport DiscussionControls from 'flarum/forum/utils/DiscussionControls';\nimport UnreadButton from './components/UnreadButton';\n\n/* global m */\n\nexport default function () {\n    extend(DiscussionControls, 'userControls', (items, discussion) => {\n        if (!discussion.attribute('whoReadCanMarkUnread')) {\n            return;\n        }\n\n        items.add('who-read-unread', m(UnreadButton, {\n            discussion,\n        }));\n    });\n}\n"],"sourceRoot":""}