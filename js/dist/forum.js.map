{"version":3,"sources":["webpack://@clarkwinkelmann/flarum-ext-who-read/webpack/bootstrap","webpack://@clarkwinkelmann/flarum-ext-who-read/external \"flarum.core.compat['app']\"","webpack://@clarkwinkelmann/flarum-ext-who-read/external \"flarum.core.compat['extend']\"","webpack://@clarkwinkelmann/flarum-ext-who-read/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@clarkwinkelmann/flarum-ext-who-read/external \"flarum.core.compat['utils/extractText']\"","webpack://@clarkwinkelmann/flarum-ext-who-read/external \"flarum.core.compat['Model']\"","webpack://@clarkwinkelmann/flarum-ext-who-read/external \"flarum.core.compat['components/Button']\"","webpack://@clarkwinkelmann/flarum-ext-who-read/external \"flarum.core.compat['Component']\"","webpack://@clarkwinkelmann/flarum-ext-who-read/external \"flarum.core.compat['components/Badge']\"","webpack://@clarkwinkelmann/flarum-ext-who-read/external \"flarum.core.compat['utils/ItemList']\"","webpack://@clarkwinkelmann/flarum-ext-who-read/external \"flarum.core.compat['helpers/avatar']\"","webpack://@clarkwinkelmann/flarum-ext-who-read/external \"flarum.core.compat['helpers/listItems']\"","webpack://@clarkwinkelmann/flarum-ext-who-read/external \"flarum.core.compat['utils/humanTime']\"","webpack://@clarkwinkelmann/flarum-ext-who-read/external \"flarum.core.compat['models/Discussion']\"","webpack://@clarkwinkelmann/flarum-ext-who-read/external \"flarum.core.compat['components/Post']\"","webpack://@clarkwinkelmann/flarum-ext-who-read/external \"flarum.core.compat['helpers/icon']\"","webpack://@clarkwinkelmann/flarum-ext-who-read/external \"flarum.core.compat['components/DiscussionPage']\"","webpack://@clarkwinkelmann/flarum-ext-who-read/external \"flarum.core.compat['utils/mixin']\"","webpack://@clarkwinkelmann/flarum-ext-who-read/external \"flarum.core.compat['components/DiscussionHero']\"","webpack://@clarkwinkelmann/flarum-ext-who-read/external \"flarum.core.compat['components/Modal']\"","webpack://@clarkwinkelmann/flarum-ext-who-read/external \"flarum.core.compat['helpers/username']\"","webpack://@clarkwinkelmann/flarum-ext-who-read/external \"flarum.core.compat['helpers/userOnline']\"","webpack://@clarkwinkelmann/flarum-ext-who-read/external \"flarum.core.compat['components/DiscussionList']\"","webpack://@clarkwinkelmann/flarum-ext-who-read/external \"flarum.core.compat['components/DiscussionListItem']\"","webpack://@clarkwinkelmann/flarum-ext-who-read/external \"flarum.core.compat['components/CommentPost']\"","webpack://@clarkwinkelmann/flarum-ext-who-read/external \"flarum.core.compat['utils/DiscussionControls']\"","webpack://@clarkwinkelmann/flarum-ext-who-read/external \"flarum.core.compat['Translator']\"","webpack://@clarkwinkelmann/flarum-ext-who-read/./src/forum/models/UserState.js","webpack://@clarkwinkelmann/flarum-ext-who-read/./src/forum/utils/appendReaderBadges.js","webpack://@clarkwinkelmann/flarum-ext-who-read/./src/forum/components/AvatarSummary.js","webpack://@clarkwinkelmann/flarum-ext-who-read/./src/forum/components/AvatarsDetails.js","webpack://@clarkwinkelmann/flarum-ext-who-read/./src/forum/components/ReadersModal.js","webpack://@clarkwinkelmann/flarum-ext-who-read/./src/forum/utils/filterVeryBehind.js","webpack://@clarkwinkelmann/flarum-ext-who-read/./src/forum/components/UnreadButton.js","webpack://@clarkwinkelmann/flarum-ext-who-read/./src/forum/index.js","webpack://@clarkwinkelmann/flarum-ext-who-read/./src/forum/addInDiscussionHero.js","webpack://@clarkwinkelmann/flarum-ext-who-read/./src/forum/addInDiscussionList.js","webpack://@clarkwinkelmann/flarum-ext-who-read/./src/forum/addInPostStream.js","webpack://@clarkwinkelmann/flarum-ext-who-read/./src/forum/addUnreadControls.js","webpack://@clarkwinkelmann/flarum-ext-who-read/./src/forum/patchTranslatorPlural.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","flarum","core","compat","_inheritsLoose","subClass","superClass","constructor","__proto__","UserState","mixin","Model","last_read_at","attribute","last_read_post_number","subscription","unread","user","hasOne","translationPrefix","badges","reader","extensions","add","Badge","component","label","app","translator","trans","icon","type","forum","Readers","view","LIMIT","this","props","readers","map","index","showAll","howManyMore","length","title","extractText","extendable","count","onclick","event","stopPropagation","ItemList","appendReaderBadges","outdated","discussion","lastPostNumber","toolTipTranslationKey","ago","humanTime","config","element","$","tooltip","placement","className","avatar","listItems","toArray","Component","AvatarsDetails","href","route","apply","arguments","userOnline","username","ReadersModal","content","section","dataKey","translationKey","Modal","filter","behindTreshold","UnreadButton","Button","children","save","whoReadUnread","then","redraw","initializers","store","models","Discussion","clarkwinkelmannWhoReaders","hasMany","extend","items","promise","attributes","lastReadPostNumber","DiscussionPage","params","include","push","DiscussionHero","filterVeryBehind","preventDefault","modal","show","readersEnd","readersBehind","AvatarSummary","DiscussionList","DiscussionListItem","Post","subtree","check","post","CommentPost","forEach","data","relationships","posts","postIds","currentPostIndex","indexOf","id","nextPostId","nextPost","getById","readersUntilHereOnly","number","readersFurther","totalReadersWhoHaveSeenThisPost","transChoice","DiscussionControls","override","Translator","original","translation","sPluralRegex","RegExp","cPluralRegex","iPluralRegex","standardRules","explicitRules","e","split","part","test","matches","match","parseInt","leftNumber","convertNumber","rightNumber","pluralPosition","locale","undefined"],"mappings":"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","file":"forum.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 30);\n","module.exports = flarum.core.compat['app'];","module.exports = flarum.core.compat['extend'];","export default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}","module.exports = flarum.core.compat['utils/extractText'];","module.exports = flarum.core.compat['Model'];","module.exports = flarum.core.compat['components/Button'];","module.exports = flarum.core.compat['Component'];","module.exports = flarum.core.compat['components/Badge'];","module.exports = flarum.core.compat['utils/ItemList'];","module.exports = flarum.core.compat['helpers/avatar'];","module.exports = flarum.core.compat['helpers/listItems'];","module.exports = flarum.core.compat['utils/humanTime'];","module.exports = flarum.core.compat['models/Discussion'];","module.exports = flarum.core.compat['components/Post'];","module.exports = flarum.core.compat['helpers/icon'];","module.exports = flarum.core.compat['components/DiscussionPage'];","module.exports = flarum.core.compat['utils/mixin'];","module.exports = flarum.core.compat['components/DiscussionHero'];","module.exports = flarum.core.compat['components/Modal'];","module.exports = flarum.core.compat['helpers/username'];","module.exports = flarum.core.compat['helpers/userOnline'];","module.exports = flarum.core.compat['components/DiscussionList'];","module.exports = flarum.core.compat['components/DiscussionListItem'];","module.exports = flarum.core.compat['components/CommentPost'];","module.exports = flarum.core.compat['utils/DiscussionControls'];","module.exports = flarum.core.compat['Translator'];","import Model from 'flarum/Model';\nimport mixin from 'flarum/utils/mixin';\n\nexport default class UserState extends mixin(Model, {\n    last_read_at: Model.attribute('last_read_at'),\n    last_read_post_number: Model.attribute('last_read_post_number'),\n    subscription: Model.attribute('subscription'),\n    unread: Model.attribute('unread'),\n    user: Model.hasOne('user'),\n}) {\n    //\n}\n","import app from 'flarum/app';\nimport Badge from 'flarum/components/Badge';\n\n/* global flarum */\n\nconst translationPrefix = 'clarkwinkelmann-who-read.forum.badges.';\n\nexport default function (badges, reader) {\n    if (flarum.extensions['flarum-subscriptions']) {\n        switch (reader.subscription()) {\n            case 'follow':\n                badges.add('subscriptions-follow', Badge.component({\n                    label: app.translator.trans(translationPrefix + 'following'),\n                    icon: 'fas fa-star',\n                    type: 'following',\n                }));\n                break;\n            case 'ignore':\n                badges.add('subscriptions-ignoring', Badge.component({\n                    label: app.translator.trans(translationPrefix + 'ignoring'),\n                    icon: 'far fa-eye-slash',\n                    type: 'ignoring',\n                }));\n                break;\n        }\n    }\n\n    if (reader.unread()) {\n        badges.add('who-read-unread', Badge.component({\n            type: 'who-read-unread',\n            icon: app.forum.attribute('who-read.unreadIcon'),\n            label: app.translator.trans(translationPrefix + 'unread'),\n        }));\n    }\n}\n","import app from 'flarum/app';\nimport Component from 'flarum/Component';\nimport avatar from 'flarum/helpers/avatar';\nimport listItems from 'flarum/helpers/listItems';\nimport extractText from 'flarum/utils/extractText';\nimport humanTime from 'flarum/utils/humanTime';\nimport ItemList from 'flarum/utils/ItemList';\nimport appendReaderBadges from '../utils/appendReaderBadges';\n\n/* global m, $ */\n\nconst translationPrefix = 'clarkwinkelmann-who-read.forum.';\n\nexport default class Readers extends Component {\n    view() {\n        const LIMIT = app.forum.attribute('who-read.maxVisible');\n\n        return m('ul.WhoRead-list.WhoRead-summary', this.props.readers.map((reader, index) => {\n            if (!this.showAll) {\n                if (index === LIMIT) {\n                    const howManyMore = this.props.readers.length - LIMIT;\n\n                    return m('span.Avatar.WhoRead-more', {\n                        // Not using a tooltip here because it kind of breaks if a tooltip is open while Mithril redraws\n                        title: extractText(app.translator.trans(translationPrefix + 'more.' + (this.props.extendable ? 'show' : 'info'), {\n                            count: howManyMore,\n                        })),\n                        onclick: event => {\n                            if (this.props.extendable) {\n                                event.stopPropagation();\n                                this.showAll = true;\n                            }\n                        },\n                    }, '+' + howManyMore);\n                }\n\n                if (index >= LIMIT) {\n                    return null;\n                }\n            }\n\n            const user = reader.user();\n\n            // Most likely this shouldn't happen, unless the database integrity is broken\n            if (!user) {\n                return null;\n            }\n\n            const badges = new ItemList();\n\n            appendReaderBadges(badges, reader);\n\n            const outdated = reader.unread() || (this.props.discussion && reader.last_read_post_number() < this.props.discussion.lastPostNumber());\n\n            let toolTipTranslationKey = 'last-read-at';\n\n            if (this.props.discussion) {\n                toolTipTranslationKey = outdated ? 'last-read-at-behind' : 'last-read-at-up-to-date';\n            }\n\n            return m('li.WhoRead-item', m('span', {\n                title: extractText(app.translator.trans(translationPrefix + 'tooltip.' + toolTipTranslationKey, {\n                    user,\n                    ago: humanTime(reader.last_read_at()),\n                })),\n                config(element) {\n                    $(element).tooltip({placement: 'top'});\n                },\n            }, [\n                m('.WhoRead-avatar', {\n                    className: outdated ? 'WhoRead-avatar--outdated' : '',\n                }, [\n                    avatar(user),\n                    m('ul.badges', listItems(badges.toArray())),\n                ]),\n            ]));\n        }));\n    }\n}\n","import app from 'flarum/app';\nimport Component from 'flarum/Component';\nimport avatar from 'flarum/helpers/avatar';\nimport listItems from 'flarum/helpers/listItems';\nimport username from 'flarum/helpers/username';\nimport userOnline from 'flarum/helpers/userOnline';\nimport extractText from 'flarum/utils/extractText';\nimport humanTime from 'flarum/utils/humanTime';\nimport appendReaderBadges from '../utils/appendReaderBadges';\n\n/* global m, $ */\n\nexport default class AvatarsDetails extends Component {\n    view() {\n        return m('ul.WhoRead-list.WhoRead-details', this.props.readers.map(reader => {\n            const user = reader.user();\n\n            // Most likely this shouldn't happen, unless the database integrity is broken\n            if (!user) {\n                return null;\n            }\n\n            const badges = user.badges();\n\n            appendReaderBadges(badges, reader);\n\n            return m('li.WhoRead-item', m('a', {\n                href: app.route.user(user),\n                title: extractText(app.translator.trans('clarkwinkelmann-who-read.forum.tooltip.last-read-at', {\n                    user,\n                    ago: humanTime(reader.last_read_at()),\n                })),\n                config(element) {\n                    $(element).tooltip({placement: 'top'});\n                    m.route.apply(this, arguments);\n                },\n            }, [\n                m('.WhoRead-avatar', [\n                    avatar(user),\n                    m('ul.badges', listItems(badges.toArray())),\n                ]),\n                m('.WhoRead-user', [\n                    userOnline(user),\n                    username(user),\n                ]),\n            ]));\n        }));\n    }\n}\n","import Modal from 'flarum/components/Modal';\nimport AvatarsDetails from './AvatarsDetails';\n\n/* global m */\n\nconst translationPrefix = 'clarkwinkelmann-who-read.forum.modal.';\n\nexport default class ReadersModal extends Modal {\n    title() {\n        return app.translator.trans(translationPrefix + 'title');\n    }\n\n    content() {\n        return m('.Modal-body', [\n            this.section('readersUntilHereOnly', 'up-to-this-post'),\n            this.section('readersFurther', 'past-this-post'),\n            this.section('readersEnd', 'to-the-end'),\n            this.section('readersBehind', 'behind'),\n        ]);\n    }\n\n    section(dataKey, translationKey) {\n        if (!this.props[dataKey] || !this.props[dataKey].length) {\n            return null;\n        }\n\n        return [\n            m('h3', app.translator.trans(translationPrefix + translationKey)),\n            AvatarsDetails.component({\n                readers: this.props[dataKey],\n            }),\n        ];\n    }\n}\n","import app from 'flarum/app';\n\nexport default function (readers, discussion) {\n    return readers.filter(reader => {\n        // The last post number might be null if the user marked as unread. In this case we hide them\n        if (reader.last_read_post_number() === null) {\n            return false;\n        }\n\n        const behindTreshold = app.forum.attribute('who-read.hideWhenBehind');\n\n        if (!behindTreshold) {\n            return true;\n        }\n\n        return reader.last_read_post_number() > discussion.lastPostNumber() - behindTreshold;\n    });\n}\n","import app from 'flarum/app';\nimport Component from 'flarum/Component';\nimport Button from 'flarum/components/Button';\n\n/* global m */\n\nexport default class UnreadButton extends Component {\n    view() {\n        const {discussion, className} = this.props;\n\n        const unread = !!discussion.attribute('whoReadUnread');\n\n        return Button.component({\n            className,\n            icon: app.forum.attribute('who-read.unreadIcon'),\n            children: app.translator.trans('clarkwinkelmann-who-read.forum.controls.' + (unread ? 'remove' : 'set') + '-unread'),\n            onclick() {\n                discussion.save({\n                    whoReadUnread: !unread,\n                }).then(() => {\n                    m.redraw();\n                });\n            },\n        });\n    }\n}\n","import {extend} from 'flarum/extend';\nimport app from 'flarum/app';\nimport DiscussionPage from 'flarum/components/DiscussionPage';\nimport Discussion from 'flarum/models/Discussion';\nimport Badge from 'flarum/components/Badge';\nimport Model from 'flarum/Model';\nimport UserState from './models/UserState';\nimport addInDiscussionHero from './addInDiscussionHero';\nimport addInDiscussionList from './addInDiscussionList';\nimport addInPostStream from './addInPostStream';\nimport addUnreadControls from './addUnreadControls';\nimport patchTranslatorPlural from './patchTranslatorPlural';\n\napp.initializers.add('clarkwinkelmann-who-read', () => {\n    app.store.models['clarkwinkelmann-who-readers'] = UserState;\n    Discussion.prototype.clarkwinkelmannWhoReaders = Discussion.hasMany('clarkwinkelmannWhoReaders');\n\n    extend(Discussion.prototype, 'badges', function (items) {\n        if (this.attribute('whoReadUnread')) {\n            items.add('who-read-unread', Badge.component({\n                type: 'who-read-unread',\n                icon: app.forum.attribute('who-read.unreadIcon'),\n                label: app.translator.trans('clarkwinkelmann-who-read.forum.badges.unread'),\n            }));\n        }\n    });\n\n    // When Flarum sets the last read post in DiscussionPage.positionChanged, we want to trigger a redraw after the request finishes\n    extend(Model.prototype, 'save', function (promise, attributes) {\n        if (attributes.lastReadPostNumber) {\n            promise.then(() => {\n                m.redraw();\n            });\n        }\n    });\n\n    // Doing this here because it's used by both DiscussionHero and PostStream\n    extend(DiscussionPage.prototype, 'params', function (params) {\n        if (!app.forum.attribute('who-read.canSee')) {\n            return;\n        }\n\n        params.include.push('clarkwinkelmannWhoReaders.user.groups');\n    });\n\n    addInDiscussionHero();\n    addInDiscussionList();\n    addInPostStream();\n    addUnreadControls();\n    patchTranslatorPlural();\n});\n","import {extend} from 'flarum/extend';\nimport app from 'flarum/app';\nimport Button from 'flarum/components/Button';\nimport DiscussionHero from 'flarum/components/DiscussionHero';\nimport AvatarSummary from './components/AvatarSummary';\nimport ReadersModal from './components/ReadersModal';\nimport filterVeryBehind from './utils/filterVeryBehind';\n\nexport default function () {\n    extend(DiscussionHero.prototype, 'items', function (items) {\n        if (!app.forum.attribute('who-read.showInHero')) {\n            return;\n        }\n\n        let readers = this.props.discussion.clarkwinkelmannWhoReaders();\n\n        if (!readers) {\n            return;\n        }\n\n        readers = filterVeryBehind(readers, this.props.discussion);\n\n        if (readers.length) {\n            items.add('who-read', Button.component({\n                className: 'Button Button--link',\n                onclick: event => {\n                    event.preventDefault();\n\n                    app.modal.show(new ReadersModal({\n                        readersEnd: readers.filter(\n                            reader => reader.last_read_post_number() >= this.props.discussion.lastPostNumber()\n                        ),\n                        readersBehind: readers.filter(\n                            reader => reader.last_read_post_number() < this.props.discussion.lastPostNumber()\n                        ),\n                    }));\n                },\n            }, [\n                AvatarSummary.component({\n                    readers,\n                    discussion: this.props.discussion,\n                    extendable: true,\n                }),\n            ]));\n        }\n    });\n}\n","import {extend} from 'flarum/extend';\nimport app from 'flarum/app';\nimport DiscussionList from 'flarum/components/DiscussionList';\nimport DiscussionListItem from 'flarum/components/DiscussionListItem';\nimport AvatarSummary from './components/AvatarSummary';\nimport filterVeryBehind from './utils/filterVeryBehind';\n\nexport default function () {\n    extend(DiscussionList.prototype, 'requestParams', function (params) {\n        if (!app.forum.attribute('who-read.showInDiscussionList')) {\n            return;\n        }\n\n        params.include.push('clarkwinkelmannWhoReaders.user.groups');\n    });\n\n    extend(DiscussionListItem.prototype, 'infoItems', function (items) {\n        if (!app.forum.attribute('who-read.showInDiscussionList')) {\n            return;\n        }\n\n        let readers = this.props.discussion.clarkwinkelmannWhoReaders();\n\n        if (!readers) {\n            return;\n        }\n\n        readers = filterVeryBehind(readers, this.props.discussion);\n\n        if (readers.length) {\n            items.add('who-read', AvatarSummary.component({\n                readers,\n                discussion: this.props.discussion,\n            }), -120);\n        }\n    });\n}\n","import {extend} from 'flarum/extend';\nimport app from 'flarum/app';\nimport Button from 'flarum/components/Button';\nimport CommentPost from 'flarum/components/CommentPost';\nimport Post from 'flarum/components/Post';\nimport icon from 'flarum/helpers/icon';\nimport extractText from 'flarum/utils/extractText';\nimport AvatarSummary from './components/AvatarSummary';\nimport ReadersModal from './components/ReadersModal';\nimport UnreadButton from './components/UnreadButton';\n\nconst translationPrefix = 'clarkwinkelmann-who-read.forum.footer.';\n\nexport default function () {\n    extend(Post.prototype, 'init', function () {\n        if (!app.forum.attribute('who-read.showBetweenPosts')) {\n            return;\n        }\n\n        this.subtree.check(\n            // Refresh if the user toggles between read and unread\n            () => this.props.post.discussion().attribute('whoReadUnread'),\n            // Make the post redraws when the last read post number changes,\n            // so that scrolling through the discussion reflects your own read status\n            () => this.props.post.discussion().lastReadPostNumber()\n        );\n    });\n\n    // For some reason extending Post is not enough to work for CommentPost. So we also add it to CommentPost\n    [Post, CommentPost].forEach(Component => {\n        extend(Component.prototype, 'footerItems', function (items) {\n            if (!app.forum.attribute('who-read.showBetweenPosts')) {\n                return;\n            }\n\n            const discussion = this.props.post.discussion();\n\n            // If the post is loaded on a user profile, we don't have access to the list\n            // of post IDs in that discussion. If that's the case, skip\n            // We can't just check the output of discussion.postIds() because on the\n            //  profile page it throws an exception because relationships is undefined\n            if (!discussion.data.relationships || !discussion.data.relationships.posts) {\n                return;\n            }\n\n            const postIds = discussion.postIds();\n            const currentPostIndex = postIds.indexOf(this.props.post.id());\n\n            if (currentPostIndex !== -1 && currentPostIndex + 1 < postIds.length) {\n                const nextPostId = postIds[currentPostIndex + 1];\n                const nextPost = app.store.getById('posts', nextPostId);\n\n                if (nextPost) {\n                    const readersUntilHereOnly = discussion.clarkwinkelmannWhoReaders().filter(\n                        reader => reader.last_read_post_number() >= this.props.post.number() && reader.last_read_post_number() < nextPost.number()\n                    );\n\n                    const readersFurther = discussion.clarkwinkelmannWhoReaders().filter(\n                        reader => reader.last_read_post_number() >= nextPost.number()\n                    );\n\n                    const totalReadersWhoHaveSeenThisPost = readersUntilHereOnly.length + readersFurther.length;\n\n                    let title = extractText(app.translator.transChoice(translationPrefix + 'read-this-post', totalReadersWhoHaveSeenThisPost, {\n                        count: totalReadersWhoHaveSeenThisPost,\n                    }));\n\n                    if (totalReadersWhoHaveSeenThisPost > 0) {\n                        title += '. ' + extractText(app.translator.transChoice(translationPrefix + 'read-no-further', readersUntilHereOnly.length, {\n                            count: readersUntilHereOnly.length,\n                        }));\n                    }\n\n                    items.add('who-read', Button.component({\n                        className: 'Button Button--link',\n                        onclick: event => {\n                            event.preventDefault();\n\n                            app.modal.show(new ReadersModal({\n                                readersUntilHereOnly,\n                                readersFurther,\n                            }));\n                        },\n                        title,\n                    }, [\n                        app.forum.attribute('who-read.showCountOfReadersWhoStopped') ? readersUntilHereOnly.length : totalReadersWhoHaveSeenThisPost,\n                        ' ',\n                        icon('fas fa-check-double'),\n                        ' ',\n                        AvatarSummary.component({\n                            readers: readersUntilHereOnly,\n                        }),\n                    ]));\n                }\n            } else if (currentPostIndex === postIds.length - 1) {\n                // If this is the last post\n\n                const readersEnd = discussion.clarkwinkelmannWhoReaders().filter(\n                    reader => reader.last_read_post_number() >= discussion.lastPostNumber()\n                );\n\n                items.add('who-read', Button.component({\n                    className: 'Button Button--link',\n                    onclick: event => {\n                        event.preventDefault();\n\n                        app.modal.show(new ReadersModal({\n                            readersEnd,\n                        }));\n                    },\n                    title: extractText(app.translator.transChoice(translationPrefix + 'read-to-end', readersEnd.length, {\n                        count: readersEnd.length,\n                    })),\n                }, [\n                    readersEnd.length,\n                    ' ',\n                    icon('fas fa-check-double'),\n                    ' ',\n                    AvatarSummary.component({\n                        readers: readersEnd,\n                    }),\n                ]));\n\n                if (discussion.attribute('whoReadCanMarkUnread')) {\n                    items.add('who-read-unread', UnreadButton.component({\n                        className: 'Button',\n                        discussion,\n                    }));\n                }\n            }\n        });\n    });\n}\n","import {extend} from 'flarum/extend';\nimport DiscussionControls from 'flarum/utils/DiscussionControls';\nimport UnreadButton from './components/UnreadButton';\n\nexport default function () {\n    extend(DiscussionControls, 'userControls', (items, discussion) => {\n        if (!discussion.attribute('whoReadCanMarkUnread')) {\n            return;\n        }\n\n        items.add('who-read-unread', UnreadButton.component({\n            discussion,\n        }));\n    });\n}\n","import {override} from 'flarum/extend';\nimport Translator from 'flarum/Translator';\n\nexport default function () {\n    /**\n     * There is a bug in Flarum's pluralize function\n     * Explicit rules are added as keys to an array object, which is then looped through via .forEach\n     * As the array is always empty, those rules are never evaluated\n     * Additionally the values returned inside .forEach would never be returned as the function return value either\n     */\n    override(Translator.prototype, 'pluralize', function (original, translation, number) {\n        const sPluralRegex = new RegExp(/^\\w+\\: +(.+)$/),\n            cPluralRegex = new RegExp(/^\\s*((\\{\\s*(\\-?\\d+[\\s*,\\s*\\-?\\d+]*)\\s*\\})|([\\[\\]])\\s*(-Inf|\\-?\\d+)\\s*,\\s*(\\+?Inf|\\-?\\d+)\\s*([\\[\\]]))\\s?(.+?)$/),\n            iPluralRegex = new RegExp(/^\\s*(\\{\\s*(\\-?\\d+[\\s*,\\s*\\-?\\d+]*)\\s*\\})|([\\[\\]])\\s*(-Inf|\\-?\\d+)\\s*,\\s*(\\+?Inf|\\-?\\d+)\\s*([\\[\\]])/),\n            standardRules = [],\n            explicitRules = {};\n\n        translation.split('|').forEach(part => {\n            if (cPluralRegex.test(part)) {\n                const matches = part.match(cPluralRegex);\n                explicitRules[matches[0]] = matches[matches.length - 1];\n            } else if (sPluralRegex.test(part)) {\n                const matches = part.match(sPluralRegex);\n                standardRules.push(matches[1]);\n            } else {\n                standardRules.push(part);\n            }\n        });\n\n        for (let e in explicitRules) {\n            if (explicitRules.hasOwnProperty(e) && iPluralRegex.test(e)) {\n                const matches = e.match(iPluralRegex);\n\n                if (matches[1]) {\n                    const ns = matches[2].split(',');\n\n                    for (let n in ns) {\n                        if (number === parseInt(ns[n])) {\n                            return explicitRules[e];\n                        }\n                    }\n                } else {\n                    const leftNumber = this.convertNumber(matches[4]);\n                    const rightNumber = this.convertNumber(matches[5]);\n\n                    if (('[' === matches[3] ? number >= leftNumber : number > leftNumber) &&\n                        (']' === matches[6] ? number <= rightNumber : number < rightNumber)) {\n                        return explicitRules[e];\n                    }\n                }\n            }\n        }\n\n        return standardRules[this.pluralPosition(number, this.locale)] || standardRules[0] || undefined;\n    });\n}\n"],"sourceRoot":""}