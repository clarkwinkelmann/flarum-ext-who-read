{"version":3,"sources":["webpack://@clarkwinkelmann/flarum-ext-who-read/webpack/bootstrap","webpack://@clarkwinkelmann/flarum-ext-who-read/external \"flarum.core.compat['app']\"","webpack://@clarkwinkelmann/flarum-ext-who-read/external \"flarum.core.compat['extend']\"","webpack://@clarkwinkelmann/flarum-ext-who-read/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@clarkwinkelmann/flarum-ext-who-read/external \"flarum.core.compat['Model']\"","webpack://@clarkwinkelmann/flarum-ext-who-read/external \"flarum.core.compat['components/Badge']\"","webpack://@clarkwinkelmann/flarum-ext-who-read/external \"flarum.core.compat['Component']\"","webpack://@clarkwinkelmann/flarum-ext-who-read/external \"flarum.core.compat['models/Discussion']\"","webpack://@clarkwinkelmann/flarum-ext-who-read/external \"flarum.core.compat['utils/extractText']\"","webpack://@clarkwinkelmann/flarum-ext-who-read/external \"flarum.core.compat['components/DiscussionPage']\"","webpack://@clarkwinkelmann/flarum-ext-who-read/external \"flarum.core.compat['utils/mixin']\"","webpack://@clarkwinkelmann/flarum-ext-who-read/external \"flarum.core.compat['components/DiscussionHero']\"","webpack://@clarkwinkelmann/flarum-ext-who-read/external \"flarum.core.compat['helpers/username']\"","webpack://@clarkwinkelmann/flarum-ext-who-read/external \"flarum.core.compat['helpers/avatar']\"","webpack://@clarkwinkelmann/flarum-ext-who-read/external \"flarum.core.compat['helpers/userOnline']\"","webpack://@clarkwinkelmann/flarum-ext-who-read/external \"flarum.core.compat['helpers/listItems']\"","webpack://@clarkwinkelmann/flarum-ext-who-read/external \"flarum.core.compat['helpers/icon']\"","webpack://@clarkwinkelmann/flarum-ext-who-read/external \"flarum.core.compat['utils/humanTime']\"","webpack://@clarkwinkelmann/flarum-ext-who-read/external \"flarum.core.compat['components/Button']\"","webpack://@clarkwinkelmann/flarum-ext-who-read/external \"flarum.core.compat['components/DiscussionList']\"","webpack://@clarkwinkelmann/flarum-ext-who-read/external \"flarum.core.compat['components/DiscussionListItem']\"","webpack://@clarkwinkelmann/flarum-ext-who-read/external \"flarum.core.compat['components/PostStream']\"","webpack://@clarkwinkelmann/flarum-ext-who-read/external \"flarum.core.compat['utils/DiscussionControls']\"","webpack://@clarkwinkelmann/flarum-ext-who-read/./src/forum/models/UserState.js","webpack://@clarkwinkelmann/flarum-ext-who-read/./src/forum/components/UnreadButton.js","webpack://@clarkwinkelmann/flarum-ext-who-read/./src/forum/components/Readers.js","webpack://@clarkwinkelmann/flarum-ext-who-read/./src/forum/index.js","webpack://@clarkwinkelmann/flarum-ext-who-read/./src/forum/addInDiscussionHero.js","webpack://@clarkwinkelmann/flarum-ext-who-read/./src/forum/addInDiscussionList.js","webpack://@clarkwinkelmann/flarum-ext-who-read/./src/forum/addInPostStream.js","webpack://@clarkwinkelmann/flarum-ext-who-read/./src/forum/addUnreadControls.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","flarum","core","compat","_inheritsLoose","subClass","superClass","constructor","__proto__","UserState","mixin","Model","last_read_at","attribute","last_read_post_number","subscription","unread","user","hasOne","UnreadButton","view","this","props","discussion","className","Button","component","icon","children","app","translator","trans","onclick","save","whoReadUnread","then","redraw","Component","Readers","LIMIT","forum","items","readersWithoutThoseVeryBehind","readers","filter","reader","behindTreshold","lastPostNumber","forEach","index","showAll","howManyMore","length","push","title","extractText","translationPrefix","count","event","preventDefault","badges","extensions","add","Badge","label","type","outdated","toolTipTranslationKey","href","route","ago","humanTime","config","element","$","tooltip","placement","apply","arguments","avatar","extended","listItems","toArray","userOnline","username","toggleable","visible","map","item","unreadControlDiscussion","initializers","store","models","Discussion","clarkwinkelmannWhoReaders","hasMany","extend","promise","attributes","lastReadPostNumber","DiscussionPage","params","include","DiscussionHero","DiscussionList","DiscussionListItem","PostStream","vnode","attrs","post","getById","readersWhoDidntReadThisPost","hasReadThePost","number","postIds","visibleStart","unshift","readersWhoReadEverything","DiscussionControls"],"mappings":"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","file":"forum.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 27);\n","module.exports = flarum.core.compat['app'];","module.exports = flarum.core.compat['extend'];","export default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}","module.exports = flarum.core.compat['Model'];","module.exports = flarum.core.compat['components/Badge'];","module.exports = flarum.core.compat['Component'];","module.exports = flarum.core.compat['models/Discussion'];","module.exports = flarum.core.compat['utils/extractText'];","module.exports = flarum.core.compat['components/DiscussionPage'];","module.exports = flarum.core.compat['utils/mixin'];","module.exports = flarum.core.compat['components/DiscussionHero'];","module.exports = flarum.core.compat['helpers/username'];","module.exports = flarum.core.compat['helpers/avatar'];","module.exports = flarum.core.compat['helpers/userOnline'];","module.exports = flarum.core.compat['helpers/listItems'];","module.exports = flarum.core.compat['helpers/icon'];","module.exports = flarum.core.compat['utils/humanTime'];","module.exports = flarum.core.compat['components/Button'];","module.exports = flarum.core.compat['components/DiscussionList'];","module.exports = flarum.core.compat['components/DiscussionListItem'];","module.exports = flarum.core.compat['components/PostStream'];","module.exports = flarum.core.compat['utils/DiscussionControls'];","import Model from 'flarum/Model';\nimport mixin from 'flarum/utils/mixin';\n\nexport default class UserState extends mixin(Model, {\n    last_read_at: Model.attribute('last_read_at'),\n    last_read_post_number: Model.attribute('last_read_post_number'),\n    subscription: Model.attribute('subscription'),\n    unread: Model.attribute('unread'),\n    user: Model.hasOne('user'),\n}) {\n    //\n}\n","import app from 'flarum/app';\nimport Component from 'flarum/Component';\nimport Button from 'flarum/components/Button';\n\n/* global m */\n\nexport default class UnreadButton extends Component {\n    view() {\n        const {discussion, className} = this.props;\n\n        const unread = !!discussion.attribute('whoReadUnread');\n\n        return Button.component({\n            className,\n            icon: 'fas fa-eye-slash',\n            children: app.translator.trans('clarkwinkelmann-who-read.forum.controls.' + (unread ? 'remove' : 'set') + '-unread'),\n            onclick() {\n                discussion.save({\n                    whoReadUnread: !unread,\n                }).then(() => {\n                    m.redraw();\n                });\n            },\n        });\n    }\n}\n","import app from 'flarum/app';\nimport Component from 'flarum/Component';\nimport username from 'flarum/helpers/username';\nimport avatar from 'flarum/helpers/avatar';\nimport Badge from 'flarum/components/Badge';\nimport userOnline from 'flarum/helpers/userOnline';\nimport listItems from 'flarum/helpers/listItems';\nimport icon from 'flarum/helpers/icon';\nimport extractText from 'flarum/utils/extractText';\nimport humanTime from 'flarum/utils/humanTime';\nimport UnreadButton from './UnreadButton';\n\n/* global m, $, flarum */\n\nconst translationPrefix = 'clarkwinkelmann-who-read.forum.';\n\nexport default class Readers extends Component {\n    view() {\n        const LIMIT = app.forum.attribute('who-read.maxVisible');\n\n        const items = [];\n\n        const readersWithoutThoseVeryBehind = this.props.readers.filter(reader => {\n            // The last post number might be null if the user marked as unread. In this case we hide them\n            if (reader.last_read_post_number() === null) {\n                return false;\n            }\n\n            if (!this.props.discussion) {\n                return true;\n            }\n\n            const behindTreshold = app.forum.attribute('who-read.hideWhenBehind');\n\n            if (!behindTreshold) {\n                return true;\n            }\n\n            return reader.last_read_post_number() > this.props.discussion.lastPostNumber() - behindTreshold;\n        });\n\n        readersWithoutThoseVeryBehind.forEach((reader, index) => {\n            if (!this.showAll) {\n                if (index === LIMIT) {\n                    const howManyMore = readersWithoutThoseVeryBehind.length - LIMIT;\n\n                    items.push(m('span.Avatar.WhoRead-more', {\n                        // Not using a tooltip here because it kind of breaks if a tooltip is open while Mithril redraws\n                        title: extractText(app.translator.trans(translationPrefix + 'show-more', {\n                            count: howManyMore,\n                        })),\n                        onclick: event => {\n                            event.preventDefault();\n                            this.showAll = true;\n                        },\n                    }, '+' + howManyMore));\n                }\n\n                if (index >= LIMIT) {\n                    return;\n                }\n            }\n\n            const user = reader.user();\n\n            // Most likely this shouldn't happen, unless the database integrity is broken\n            if (!user) {\n                return;\n            }\n\n            const badges = user.badges();\n\n            if (flarum.extensions['flarum-subscriptions']) {\n                switch (reader.subscription()) {\n                    case 'follow':\n                        badges.add('subscriptions-follow', Badge.component({\n                            label: app.translator.trans('flarum-subscriptions.forum.badge.following_tooltip'),\n                            icon: 'fas fa-star',\n                            type: 'following',\n                        }));\n                        break;\n                    case 'ignore':\n                        badges.add('subscriptions-ignoring', Badge.component({\n                            label: app.translator.trans('flarum-subscriptions.forum.badge.ignoring_tooltip'),\n                            icon: 'far fa-eye-slash',\n                            type: 'ignoring',\n                        }));\n                        break;\n                }\n            }\n\n            if (reader.unread()) {\n                badges.add('who-read-unread', Badge.component({\n                    type: 'who-read-unread',\n                    icon: 'fas fa-eye-slash',\n                    label: app.translator.trans('clarkwinkelmann-who-read.forum.badges.unread'),\n                }));\n            }\n\n            const outdated = reader.unread() || (this.props.discussion && reader.last_read_post_number() < this.props.discussion.lastPostNumber());\n\n            let toolTipTranslationKey = 'last_read_at';\n\n            if (this.props.discussion) {\n                toolTipTranslationKey = outdated ? 'last_read_at_behind' : 'last_read_at_up_to_date';\n            }\n\n            items.push(m('a', {\n                href: app.route.user(user),\n                title: extractText(app.translator.trans(translationPrefix + 'tooltip.' + toolTipTranslationKey, {\n                    user,\n                    ago: humanTime(reader.last_read_at()),\n                })),\n                config(element) {\n                    $(element).tooltip({placement: 'top'});\n                    m.route.apply(this, arguments);\n                },\n            }, [\n                m('.WhoRead-avatar', {\n                    className: outdated ? 'WhoRead-avatar--outdated' : '',\n                }, [\n                    avatar(user),\n                    this.props.extended ? m('ul.badges', listItems(badges.toArray())) : null,\n                ]),\n                this.props.extended ? m('.WhoRead-user', [\n                    userOnline(user),\n                    username(user),\n                ]) : null,\n            ]));\n        });\n\n        return m('.WhoRead', {\n            className: this.props.extended ? 'WhoRead--extended' : '',\n        }, [\n            this.props.toggleable ? m('.WhoRead-toggle', {\n                onclick: () => {\n                    this.visible = !this.visible;\n                },\n            }, icon('fas fa-chevron-' + (this.visible ? 'up' : 'down'))) : null,\n            this.props.title ? m('h3', {\n                onclick: () => {\n                    this.visible = !this.visible;\n                },\n            }, this.props.title) : null,\n            !this.props.toggleable || this.visible ? m('ul.WhoRead-list', items.map(item => m('li.WhoRead-item', item))) : null,\n            this.props.unreadControlDiscussion && this.props.unreadControlDiscussion.attribute('whoReadCanMarkUnread') ? UnreadButton.component({\n                className: 'Button',\n                discussion: this.props.unreadControlDiscussion,\n            }) : null,\n        ]);\n    }\n}\n","import {extend} from 'flarum/extend';\nimport app from 'flarum/app';\nimport DiscussionPage from 'flarum/components/DiscussionPage';\nimport Discussion from 'flarum/models/Discussion';\nimport Badge from 'flarum/components/Badge';\nimport Model from 'flarum/Model';\nimport UserState from './models/UserState';\nimport addInDiscussionHero from './addInDiscussionHero';\nimport addInDiscussionList from './addInDiscussionList';\nimport addInPostStream from './addInPostStream';\nimport addUnreadControls from './addUnreadControls';\n\napp.initializers.add('clarkwinkelmann-who-read', () => {\n    app.store.models['clarkwinkelmann-who-readers'] = UserState;\n    Discussion.prototype.clarkwinkelmannWhoReaders = Discussion.hasMany('clarkwinkelmannWhoReaders');\n\n    extend(Discussion.prototype, 'badges', function (items) {\n        if (this.attribute('whoReadUnread')) {\n            items.add('who-read-unread', Badge.component({\n                type: 'who-read-unread',\n                icon: 'fas fa-eye-slash',\n                label: app.translator.trans('clarkwinkelmann-who-read.forum.badges.unread'),\n            }));\n        }\n    });\n\n    // When Flarum sets the last read post in DiscussionPage.positionChanged, we want to trigger a redraw after the request finishes\n    extend(Model.prototype, 'save', function (promise, attributes) {\n        if (attributes.lastReadPostNumber) {\n            promise.then(() => {\n                m.redraw();\n            });\n        }\n    });\n\n    // Doing this here because it's used by both DiscussionHero and PostStream\n    extend(DiscussionPage.prototype, 'params', function (params) {\n        if (!app.forum.attribute('who-read.canSee')) {\n            return;\n        }\n\n        params.include.push('clarkwinkelmannWhoReaders.user.groups');\n    });\n\n    addInDiscussionHero();\n    addInDiscussionList();\n    addInPostStream();\n    addUnreadControls();\n});\n","import {extend} from 'flarum/extend';\nimport app from 'flarum/app';\nimport DiscussionHero from 'flarum/components/DiscussionHero';\nimport Readers from './components/Readers';\n\nexport default function () {\n    extend(DiscussionHero.prototype, 'items', function (items) {\n        if (!app.forum.attribute('who-read.showInHero')) {\n            return;\n        }\n\n        const readers = this.props.discussion.clarkwinkelmannWhoReaders();\n\n        if (readers && readers.length) {\n            items.add('who-read', Readers.component({\n                readers,\n                discussion: this.props.discussion,\n                extended: true,\n            }), -10);\n        }\n    });\n}\n","import {extend} from 'flarum/extend';\nimport app from 'flarum/app';\nimport DiscussionList from 'flarum/components/DiscussionList';\nimport DiscussionListItem from 'flarum/components/DiscussionListItem';\nimport Readers from './components/Readers';\n\nexport default function () {\n    extend(DiscussionList.prototype, 'requestParams', function (params) {\n        if (!app.forum.attribute('who-read.showInDiscussionList')) {\n            return;\n        }\n\n        params.include.push('clarkwinkelmannWhoReaders.user.groups');\n    });\n\n    extend(DiscussionListItem.prototype, 'infoItems', function (items) {\n        if (!app.forum.attribute('who-read.showInDiscussionList')) {\n            return;\n        }\n\n        const readers = this.props.discussion.clarkwinkelmannWhoReaders();\n\n        if (readers && readers.length) {\n            items.add('who-read', Readers.component({\n                readers,\n                discussion: this.props.discussion,\n            }), -120);\n        }\n    });\n}\n","import {extend} from 'flarum/extend';\nimport app from 'flarum/app';\nimport PostStream from 'flarum/components/PostStream';\nimport Readers from './components/Readers';\n\nconst translationPrefix = 'clarkwinkelmann-who-read.forum.';\n\nexport default function () {\n    extend(PostStream.prototype, 'view', function (vnode) {\n        let readers = this.discussion.clarkwinkelmannWhoReaders();\n\n        // If there are no readers or if we can't see them, skip\n        if (!readers) {\n            return;\n        }\n\n        vnode.children.forEach(item => {\n            if (app.forum.attribute('who-read.showBetweenPosts') && item.attrs && item.attrs['data-id']) {\n                const post = app.store.getById('posts', item.attrs['data-id']);\n\n                // Separate the readers into two arrays.\n                // Those who read this post stay in the original array, they will be shown below.\n                // Those who did not read go in the new array, they will be shown above the post.\n                const readersWhoDidntReadThisPost = [];\n                readers = readers.filter(reader => {\n                    const hasReadThePost = reader.last_read_post_number() >= post.number();\n\n                    if (!hasReadThePost) {\n                        readersWhoDidntReadThisPost.push(reader);\n                    }\n\n                    return hasReadThePost;\n                });\n\n                // If this is the first post of the visible section, we won't show read status\n                // If we showed it, it would show everyone who didn't read up to here together, even if they stopped reading many pages away\n                // The check is done after we extract readers, that way those readers of previous pages are removed and won't show up\n                if (this.discussion.postIds()[this.visibleStart] === item.attrs['data-id']) {\n                    return;\n                }\n\n                if (readersWhoDidntReadThisPost.length) {\n                    item.children.unshift(Readers.component({\n                        readers: readersWhoDidntReadThisPost,\n                        extended: true,\n                        title: app.translator.trans(translationPrefix + 'stats.to_at_least_here', {\n                            count: readersWhoDidntReadThisPost.length + readers.length,\n                        }),\n                        toggleable: true,\n                    }));\n                }\n            }\n\n            // Insert remaining readers above the reply box\n            if (item.attrs && item.attrs.key === 'reply') {\n                // We don't re-use the readers array because it won't be filtered if between-post is disabled\n                // Best to make a clean filtering anyway to prevent any issue with pagination as well\n                const readersWhoReadEverything = this.discussion.clarkwinkelmannWhoReaders().filter(reader => reader.last_read_post_number() >= this.discussion.lastPostNumber());\n\n                if (readersWhoReadEverything.length > 0) {\n                    item.children.unshift(Readers.component({\n                        readers: readersWhoReadEverything,\n                        extended: true,\n                        title: app.translator.trans(translationPrefix + 'stats.to_end', {\n                            count: readersWhoReadEverything.length,\n                        }),\n                        unreadControlDiscussion: this.discussion,\n                    }));\n                }\n            }\n        });\n    });\n}\n","import {extend} from 'flarum/extend';\nimport DiscussionControls from 'flarum/utils/DiscussionControls';\nimport UnreadButton from './components/UnreadButton';\n\nexport default function () {\n    extend(DiscussionControls, 'userControls', (items, discussion) => {\n        if (!discussion.attribute('whoReadCanMarkUnread')) {\n            return;\n        }\n\n        items.add('who-read-unread', UnreadButton.component({\n            discussion,\n        }));\n    });\n}\n"],"sourceRoot":""}