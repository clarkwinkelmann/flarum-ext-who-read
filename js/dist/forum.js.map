{"version":3,"sources":["webpack://@clarkwinkelmann/flarum-ext-who-read/webpack/bootstrap","webpack://@clarkwinkelmann/flarum-ext-who-read/external \"flarum.core.compat['app']\"","webpack://@clarkwinkelmann/flarum-ext-who-read/external \"flarum.core.compat['extend']\"","webpack://@clarkwinkelmann/flarum-ext-who-read/external \"flarum.core.compat['utils/extractText']\"","webpack://@clarkwinkelmann/flarum-ext-who-read/external \"flarum.core.compat['Model']\"","webpack://@clarkwinkelmann/flarum-ext-who-read/external \"flarum.core.compat['components/Button']\"","webpack://@clarkwinkelmann/flarum-ext-who-read/external \"flarum.core.compat['components/Badge']\"","webpack://@clarkwinkelmann/flarum-ext-who-read/external \"flarum.core.compat['helpers/avatar']\"","webpack://@clarkwinkelmann/flarum-ext-who-read/external \"flarum.core.compat['helpers/listItems']\"","webpack://@clarkwinkelmann/flarum-ext-who-read/external \"flarum.core.compat['utils/humanTime']\"","webpack://@clarkwinkelmann/flarum-ext-who-read/external \"flarum.core.compat['models/Discussion']\"","webpack://@clarkwinkelmann/flarum-ext-who-read/external \"flarum.core.compat['components/Post']\"","webpack://@clarkwinkelmann/flarum-ext-who-read/external \"flarum.core.compat['helpers/icon']\"","webpack://@clarkwinkelmann/flarum-ext-who-read/external \"flarum.core.compat['states/DiscussionListState']\"","webpack://@clarkwinkelmann/flarum-ext-who-read/external \"flarum.core.compat['components/DiscussionHero']\"","webpack://@clarkwinkelmann/flarum-ext-who-read/external \"flarum.core.compat['utils/ItemList']\"","webpack://@clarkwinkelmann/flarum-ext-who-read/external \"flarum.core.compat['components/Modal']\"","webpack://@clarkwinkelmann/flarum-ext-who-read/external \"flarum.core.compat['components/Link']\"","webpack://@clarkwinkelmann/flarum-ext-who-read/external \"flarum.core.compat['helpers/username']\"","webpack://@clarkwinkelmann/flarum-ext-who-read/external \"flarum.core.compat['helpers/userOnline']\"","webpack://@clarkwinkelmann/flarum-ext-who-read/external \"flarum.core.compat['components/DiscussionList']\"","webpack://@clarkwinkelmann/flarum-ext-who-read/external \"flarum.core.compat['components/DiscussionListItem']\"","webpack://@clarkwinkelmann/flarum-ext-who-read/external \"flarum.core.compat['components/CommentPost']\"","webpack://@clarkwinkelmann/flarum-ext-who-read/external \"flarum.core.compat['utils/DiscussionControls']\"","webpack://@clarkwinkelmann/flarum-ext-who-read/external \"flarum.core.compat['Translator']\"","webpack://@clarkwinkelmann/flarum-ext-who-read/./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack://@clarkwinkelmann/flarum-ext-who-read/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@clarkwinkelmann/flarum-ext-who-read/./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack://@clarkwinkelmann/flarum-ext-who-read/./src/forum/models/UserState.js","webpack://@clarkwinkelmann/flarum-ext-who-read/./src/forum/utils/appendReaderBadges.js","webpack://@clarkwinkelmann/flarum-ext-who-read/./src/forum/components/AvatarSummary.js","webpack://@clarkwinkelmann/flarum-ext-who-read/./src/forum/components/AvatarsDetails.js","webpack://@clarkwinkelmann/flarum-ext-who-read/./src/forum/components/ReadersModal.js","webpack://@clarkwinkelmann/flarum-ext-who-read/./src/forum/utils/filterVeryBehind.js","webpack://@clarkwinkelmann/flarum-ext-who-read/./src/forum/components/UnreadButton.js","webpack://@clarkwinkelmann/flarum-ext-who-read/./src/forum/index.js","webpack://@clarkwinkelmann/flarum-ext-who-read/./src/forum/addInDiscussionHero.js","webpack://@clarkwinkelmann/flarum-ext-who-read/./src/forum/addInDiscussionList.js","webpack://@clarkwinkelmann/flarum-ext-who-read/./src/forum/addInPostStream.js","webpack://@clarkwinkelmann/flarum-ext-who-read/./src/forum/addUnreadControls.js","webpack://@clarkwinkelmann/flarum-ext-who-read/./src/forum/patchTranslatorPlural.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","flarum","core","compat","_assertThisInitialized","self","ReferenceError","_inheritsLoose","subClass","superClass","constructor","__proto__","_defineProperty","obj","configurable","writable","UserState","Model","attribute","hasOne","translationPrefix","badges","reader","extensions","subscription","add","Badge","component","label","app","translator","trans","icon","type","unread","forum","AvatarSummary","view","vnode","LIMIT","attrs","readers","extendable","discussion","map","index","showAll","howManyMore","length","title","extractText","count","onclick","event","stopPropagation","user","ItemList","appendReaderBadges","outdated","last_read_post_number","lastPostNumber","toolTipTranslationKey","ago","humanTime","last_read_at","oncreate","$","dom","tooltip","placement","className","avatar","listItems","toArray","AvatarsDetails","Link","href","route","viewport","selector","padding","userOnline","username","ReadersModal","content","this","section","dataKey","translationKey","Modal","filter","behindTreshold","UnreadButton","Button","save","whoReadUnread","then","redraw","initializers","store","models","Discussion","clarkwinkelmannWhoReaders","hasMany","extend","items","promise","attributes","lastReadPostNumber","DiscussionListState","params","include","push","DiscussionHero","filterVeryBehind","preventDefault","modal","show","readersEnd","readersBehind","DiscussionList","DiscussionListItem","Post","subtree","check","post","CommentPost","forEach","Component","data","relationships","posts","postIds","currentPostIndex","indexOf","id","nextPostId","nextPost","getById","readersUntilHereOnly","number","readersFurther","totalReadersWhoHaveSeenThisPost","transChoice","DiscussionControls","override","Translator","original","translation","sPluralRegex","RegExp","cPluralRegex","iPluralRegex","standardRules","explicitRules","e","split","part","test","matches","match","parseInt","leftNumber","convertNumber","rightNumber","pluralPosition","locale","undefined"],"mappings":"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","file":"forum.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 26);\n","module.exports = flarum.core.compat['app'];","module.exports = flarum.core.compat['extend'];","module.exports = flarum.core.compat['utils/extractText'];","module.exports = flarum.core.compat['Model'];","module.exports = flarum.core.compat['components/Button'];","module.exports = flarum.core.compat['components/Badge'];","module.exports = flarum.core.compat['helpers/avatar'];","module.exports = flarum.core.compat['helpers/listItems'];","module.exports = flarum.core.compat['utils/humanTime'];","module.exports = flarum.core.compat['models/Discussion'];","module.exports = flarum.core.compat['components/Post'];","module.exports = flarum.core.compat['helpers/icon'];","module.exports = flarum.core.compat['states/DiscussionListState'];","module.exports = flarum.core.compat['components/DiscussionHero'];","module.exports = flarum.core.compat['utils/ItemList'];","module.exports = flarum.core.compat['components/Modal'];","module.exports = flarum.core.compat['components/Link'];","module.exports = flarum.core.compat['helpers/username'];","module.exports = flarum.core.compat['helpers/userOnline'];","module.exports = flarum.core.compat['components/DiscussionList'];","module.exports = flarum.core.compat['components/DiscussionListItem'];","module.exports = flarum.core.compat['components/CommentPost'];","module.exports = flarum.core.compat['utils/DiscussionControls'];","module.exports = flarum.core.compat['Translator'];","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","export default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import Model from 'flarum/Model';\n\nexport default class UserState extends Model {\n    last_read_at = Model.attribute('last_read_at');\n    last_read_post_number = Model.attribute('last_read_post_number');\n    subscription = Model.attribute('subscription');\n    unread = Model.attribute('unread');\n    user = Model.hasOne('user');\n}\n","import app from 'flarum/app';\nimport Badge from 'flarum/components/Badge';\n\n/* global flarum */\n\nconst translationPrefix = 'clarkwinkelmann-who-read.forum.badges.';\n\nexport default function (badges, reader) {\n    if (flarum.extensions['flarum-subscriptions']) {\n        switch (reader.subscription()) {\n            case 'follow':\n                badges.add('subscriptions-follow', Badge.component({\n                    label: app.translator.trans(translationPrefix + 'following'),\n                    icon: 'fas fa-star',\n                    type: 'following',\n                }));\n                break;\n            case 'ignore':\n                badges.add('subscriptions-ignoring', Badge.component({\n                    label: app.translator.trans(translationPrefix + 'ignoring'),\n                    icon: 'far fa-eye-slash',\n                    type: 'ignoring',\n                }));\n                break;\n        }\n    }\n\n    if (reader.unread()) {\n        badges.add('who-read-unread', Badge.component({\n            type: 'who-read-unread',\n            icon: app.forum.attribute('who-read.unreadIcon'),\n            label: app.translator.trans(translationPrefix + 'unread'),\n        }));\n    }\n}\n","import app from 'flarum/app';\nimport avatar from 'flarum/helpers/avatar';\nimport listItems from 'flarum/helpers/listItems';\nimport extractText from 'flarum/utils/extractText';\nimport humanTime from 'flarum/utils/humanTime';\nimport ItemList from 'flarum/utils/ItemList';\nimport appendReaderBadges from '../utils/appendReaderBadges';\n\n/* global m, $ */\n\nconst translationPrefix = 'clarkwinkelmann-who-read.forum.';\n\nexport default class AvatarSummary {\n    view(vnode) {\n        const LIMIT = app.forum.attribute('who-read.maxVisible');\n\n        const {readers, extendable, discussion} = vnode.attrs;\n\n        return m('ul.WhoRead-list.WhoRead-summary', readers.map((reader, index) => {\n            if (!this.showAll) {\n                if (index === LIMIT) {\n                    const howManyMore = readers.length - LIMIT;\n\n                    return m('span.Avatar.WhoRead-more', {\n                        // Not using a tooltip here because it kind of breaks if a tooltip is open while Mithril redraws\n                        title: extractText(app.translator.trans(translationPrefix + 'more.' + (extendable ? 'show' : 'info'), {\n                            count: howManyMore,\n                        })),\n                        onclick: event => {\n                            if (extendable) {\n                                event.stopPropagation();\n                                this.showAll = true;\n                            }\n                        },\n                    }, '+' + howManyMore);\n                }\n\n                if (index >= LIMIT) {\n                    return null;\n                }\n            }\n\n            const user = reader.user();\n\n            // Most likely this shouldn't happen, unless the database integrity is broken\n            if (!user) {\n                return null;\n            }\n\n            const badges = new ItemList();\n\n            appendReaderBadges(badges, reader);\n\n            const outdated = reader.unread() || (discussion && reader.last_read_post_number() < discussion.lastPostNumber());\n\n            let toolTipTranslationKey = 'last-read-at';\n\n            if (discussion) {\n                toolTipTranslationKey = outdated ? 'last-read-at-behind' : 'last-read-at-up-to-date';\n            }\n\n            return m('li.WhoRead-item', m('span', {\n                title: extractText(app.translator.trans(translationPrefix + 'tooltip.' + toolTipTranslationKey, {\n                    user,\n                    ago: humanTime(reader.last_read_at()),\n                })),\n                oncreate(vnode) {\n                    $(vnode.dom).tooltip({placement: 'top'});\n                },\n            }, [\n                m('.WhoRead-avatar', {\n                    className: outdated ? 'WhoRead-avatar--outdated' : '',\n                }, [\n                    avatar(user),\n                    m('ul.badges', listItems(badges.toArray())),\n                ]),\n            ]));\n        }));\n    }\n}\n","import app from 'flarum/app';\nimport Link from 'flarum/components/Link';\nimport avatar from 'flarum/helpers/avatar';\nimport listItems from 'flarum/helpers/listItems';\nimport username from 'flarum/helpers/username';\nimport userOnline from 'flarum/helpers/userOnline';\nimport extractText from 'flarum/utils/extractText';\nimport humanTime from 'flarum/utils/humanTime';\nimport appendReaderBadges from '../utils/appendReaderBadges';\n\n/* global m, $ */\n\nexport default class AvatarsDetails {\n    view(vnode) {\n        return m('ul.WhoRead-list.WhoRead-details', vnode.attrs.readers.map(reader => {\n            const user = reader.user();\n\n            // Most likely this shouldn't happen, unless the database integrity is broken\n            if (!user) {\n                return null;\n            }\n\n            const badges = user.badges();\n\n            appendReaderBadges(badges, reader);\n\n            return m('li.WhoRead-item', m(Link, {\n                href: app.route.user(user),\n                title: extractText(app.translator.trans('clarkwinkelmann-who-read.forum.tooltip.last-read-at', {\n                    user,\n                    ago: humanTime(reader.last_read_at()),\n                })),\n                oncreate(vnode) {\n                    $(vnode.dom).tooltip({\n                        placement: 'top',\n                        viewport: {\n                            selector: '.Modal',\n                            padding: 10,\n                        },\n                    });\n                },\n            }, [\n                m('.WhoRead-avatar', [\n                    avatar(user),\n                    m('ul.badges', listItems(badges.toArray())),\n                ]),\n                m('.WhoRead-user', [\n                    userOnline(user),\n                    username(user),\n                ]),\n            ]));\n        }));\n    }\n}\n","import app from 'flarum/app';\nimport Modal from 'flarum/components/Modal';\nimport AvatarsDetails from './AvatarsDetails';\n\n/* global m */\n\nconst translationPrefix = 'clarkwinkelmann-who-read.forum.modal.';\n\nexport default class ReadersModal extends Modal {\n    title() {\n        return app.translator.trans(translationPrefix + 'title');\n    }\n\n    content() {\n        return m('.Modal-body', [\n            this.section('readersUntilHereOnly', 'up-to-this-post'),\n            this.section('readersFurther', 'past-this-post'),\n            this.section('readersEnd', 'to-the-end'),\n            this.section('readersBehind', 'behind'),\n        ]);\n    }\n\n    section(dataKey, translationKey) {\n        if (!this.attrs[dataKey] || !this.attrs[dataKey].length) {\n            return null;\n        }\n\n        return [\n            m('h3', app.translator.trans(translationPrefix + translationKey)),\n            m(AvatarsDetails, {\n                readers: this.attrs[dataKey],\n            }),\n        ];\n    }\n}\n","import app from 'flarum/app';\n\nexport default function (readers, discussion) {\n    return readers.filter(reader => {\n        // The last post number might be null if the user marked as unread. In this case we hide them\n        if (reader.last_read_post_number() === null) {\n            return false;\n        }\n\n        const behindTreshold = app.forum.attribute('who-read.hideWhenBehind');\n\n        if (!behindTreshold) {\n            return true;\n        }\n\n        return reader.last_read_post_number() > discussion.lastPostNumber() - behindTreshold;\n    });\n}\n","import app from 'flarum/app';\nimport Button from 'flarum/components/Button';\n\n/* global m */\n\nexport default class UnreadButton {\n    view(vnode) {\n        const {discussion, className} = vnode.attrs;\n\n        const unread = !!discussion.attribute('whoReadUnread');\n\n        return Button.component({\n            className,\n            icon: app.forum.attribute('who-read.unreadIcon'),\n            onclick() {\n                discussion.save({\n                    whoReadUnread: !unread,\n                }).then(() => {\n                    m.redraw();\n                });\n            },\n        }, app.translator.trans('clarkwinkelmann-who-read.forum.controls.' + (unread ? 'remove' : 'set') + '-unread'));\n    }\n}\n","import {extend} from 'flarum/extend';\nimport app from 'flarum/app';\nimport DiscussionListState from 'flarum/states/DiscussionListState';\nimport Discussion from 'flarum/models/Discussion';\nimport Badge from 'flarum/components/Badge';\nimport Model from 'flarum/Model';\nimport UserState from './models/UserState';\nimport addInDiscussionHero from './addInDiscussionHero';\nimport addInDiscussionList from './addInDiscussionList';\nimport addInPostStream from './addInPostStream';\nimport addUnreadControls from './addUnreadControls';\nimport patchTranslatorPlural from './patchTranslatorPlural';\n\napp.initializers.add('clarkwinkelmann-who-read', () => {\n    app.store.models['clarkwinkelmann-who-readers'] = UserState;\n    Discussion.prototype.clarkwinkelmannWhoReaders = Discussion.hasMany('clarkwinkelmannWhoReaders');\n\n    extend(Discussion.prototype, 'badges', function (items) {\n        if (this.attribute('whoReadUnread')) {\n            items.add('who-read-unread', Badge.component({\n                type: 'who-read-unread',\n                icon: app.forum.attribute('who-read.unreadIcon'),\n                label: app.translator.trans('clarkwinkelmann-who-read.forum.badges.unread'),\n            }));\n        }\n    });\n\n    // When Flarum sets the last read post in DiscussionPage.positionChanged, we want to trigger a redraw after the request finishes\n    extend(Model.prototype, 'save', function (promise, attributes) {\n        if (attributes.lastReadPostNumber) {\n            promise.then(() => {\n                m.redraw();\n            });\n        }\n    });\n\n    extend(DiscussionListState.prototype, 'requestParams', function (params) {\n        if (!app.forum.attribute('who-read.canSee')) {\n            return;\n        }\n\n        params.include.push('clarkwinkelmannWhoReaders.user.groups');\n    });\n\n    addInDiscussionHero();\n    addInDiscussionList();\n    addInPostStream();\n    addUnreadControls();\n    patchTranslatorPlural();\n});\n","import {extend} from 'flarum/extend';\nimport app from 'flarum/app';\nimport Button from 'flarum/components/Button';\nimport DiscussionHero from 'flarum/components/DiscussionHero';\nimport AvatarSummary from './components/AvatarSummary';\nimport ReadersModal from './components/ReadersModal';\nimport filterVeryBehind from './utils/filterVeryBehind';\n\n/* global m */\n\nexport default function () {\n    extend(DiscussionHero.prototype, 'items', function (items) {\n        if (!app.forum.attribute('who-read.showInHero')) {\n            return;\n        }\n\n        const {discussion} = this.attrs;\n\n        let readers = discussion.clarkwinkelmannWhoReaders();\n\n        if (!readers) {\n            return;\n        }\n\n        readers = filterVeryBehind(readers, discussion);\n\n        if (readers.length) {\n            items.add('who-read', Button.component({\n                className: 'Button Button--link',\n                onclick: event => {\n                    event.preventDefault();\n\n                    app.modal.show(ReadersModal, {\n                        readersEnd: readers.filter(\n                            reader => reader.last_read_post_number() >= discussion.lastPostNumber()\n                        ),\n                        readersBehind: readers.filter(\n                            reader => reader.last_read_post_number() < discussion.lastPostNumber()\n                        ),\n                    });\n                },\n            }, m(AvatarSummary, {\n                readers,\n                discussion,\n                extendable: true,\n            })));\n        }\n    });\n}\n","import {extend} from 'flarum/extend';\nimport app from 'flarum/app';\nimport DiscussionList from 'flarum/components/DiscussionList';\nimport DiscussionListItem from 'flarum/components/DiscussionListItem';\nimport AvatarSummary from './components/AvatarSummary';\nimport filterVeryBehind from './utils/filterVeryBehind';\n\n/* global m */\n\nexport default function () {\n    extend(DiscussionList.prototype, 'requestParams', function (params) {\n        if (!app.forum.attribute('who-read.showInDiscussionList')) {\n            return;\n        }\n\n        params.include.push('clarkwinkelmannWhoReaders.user.groups');\n    });\n\n    extend(DiscussionListItem.prototype, 'infoItems', function (items) {\n        if (!app.forum.attribute('who-read.showInDiscussionList')) {\n            return;\n        }\n\n        const {discussion} = this.attrs;\n\n        let readers = discussion.clarkwinkelmannWhoReaders();\n\n        if (!readers) {\n            return;\n        }\n\n        readers = filterVeryBehind(readers, discussion);\n\n        if (readers.length) {\n            items.add('who-read', m(AvatarSummary, {\n                readers,\n                discussion,\n            }), -120);\n        }\n    });\n}\n","import {extend} from 'flarum/extend';\nimport app from 'flarum/app';\nimport Button from 'flarum/components/Button';\nimport CommentPost from 'flarum/components/CommentPost';\nimport Post from 'flarum/components/Post';\nimport icon from 'flarum/helpers/icon';\nimport extractText from 'flarum/utils/extractText';\nimport AvatarSummary from './components/AvatarSummary';\nimport ReadersModal from './components/ReadersModal';\nimport UnreadButton from './components/UnreadButton';\n\n/* global m */\n\nconst translationPrefix = 'clarkwinkelmann-who-read.forum.footer.';\n\nexport default function () {\n    extend(Post.prototype, 'oninit', function () {\n        if (!app.forum.attribute('who-read.showBetweenPosts')) {\n            return;\n        }\n\n        this.subtree.check(\n            // Refresh if the user toggles between read and unread\n            () => this.attrs.post.discussion().attribute('whoReadUnread'),\n            // Make the post redraws when the last read post number changes,\n            // so that scrolling through the discussion reflects your own read status\n            () => this.attrs.post.discussion().lastReadPostNumber()\n        );\n    });\n\n    // For some reason extending Post is not enough to work for CommentPost. So we also add it to CommentPost\n    [Post, CommentPost].forEach(Component => {\n        extend(Component.prototype, 'footerItems', function (items) {\n            if (!app.forum.attribute('who-read.showBetweenPosts')) {\n                return;\n            }\n\n            const {post} = this.attrs;\n            const discussion = post.discussion();\n\n            // If the post is loaded on a user profile, we don't have access to the list\n            // of post IDs in that discussion. If that's the case, skip\n            // We can't just check the output of discussion.postIds() because on the\n            //  profile page it throws an exception because relationships is undefined\n            if (!discussion.data.relationships || !discussion.data.relationships.posts) {\n                return;\n            }\n\n            const postIds = discussion.postIds();\n            const currentPostIndex = postIds.indexOf(post.id());\n\n            if (currentPostIndex !== -1 && currentPostIndex + 1 < postIds.length) {\n                const nextPostId = postIds[currentPostIndex + 1];\n                const nextPost = app.store.getById('posts', nextPostId);\n\n                if (nextPost) {\n                    const readersUntilHereOnly = discussion.clarkwinkelmannWhoReaders().filter(\n                        reader => reader.last_read_post_number() >= post.number() && reader.last_read_post_number() < nextPost.number()\n                    );\n\n                    const readersFurther = discussion.clarkwinkelmannWhoReaders().filter(\n                        reader => reader.last_read_post_number() >= nextPost.number()\n                    );\n\n                    const totalReadersWhoHaveSeenThisPost = readersUntilHereOnly.length + readersFurther.length;\n\n                    let title = extractText(app.translator.transChoice(translationPrefix + 'read-this-post', totalReadersWhoHaveSeenThisPost, {\n                        count: totalReadersWhoHaveSeenThisPost,\n                    }));\n\n                    if (totalReadersWhoHaveSeenThisPost > 0) {\n                        title += '. ' + extractText(app.translator.transChoice(translationPrefix + 'read-no-further', readersUntilHereOnly.length, {\n                            count: readersUntilHereOnly.length,\n                        }));\n                    }\n\n                    items.add('who-read', Button.component({\n                        className: 'Button Button--link',\n                        onclick: event => {\n                            event.preventDefault();\n\n                            app.modal.show(ReadersModal, {\n                                readersUntilHereOnly,\n                                readersFurther,\n                            });\n                        },\n                        title,\n                    }, [\n                        app.forum.attribute('who-read.showCountOfReadersWhoStopped') ? readersUntilHereOnly.length : totalReadersWhoHaveSeenThisPost,\n                        ' ',\n                        icon('fas fa-check-double'),\n                        ' ',\n                        m(AvatarSummary, {\n                            readers: readersUntilHereOnly,\n                        }),\n                    ]));\n                }\n            } else if (currentPostIndex === postIds.length - 1) {\n                // If this is the last post\n\n                const readersEnd = discussion.clarkwinkelmannWhoReaders().filter(\n                    reader => reader.last_read_post_number() >= discussion.lastPostNumber()\n                );\n\n                items.add('who-read', Button.component({\n                    className: 'Button Button--link',\n                    onclick: event => {\n                        event.preventDefault();\n\n                        app.modal.show(ReadersModal, {\n                            readersEnd,\n                        });\n                    },\n                    title: extractText(app.translator.transChoice(translationPrefix + 'read-to-end', readersEnd.length, {\n                        count: readersEnd.length,\n                    })),\n                }, [\n                    readersEnd.length,\n                    ' ',\n                    icon('fas fa-check-double'),\n                    ' ',\n                    m(AvatarSummary, {\n                        readers: readersEnd,\n                    }),\n                ]));\n\n                if (discussion.attribute('whoReadCanMarkUnread')) {\n                    items.add('who-read-unread', m(UnreadButton, {\n                        className: 'Button',\n                        discussion,\n                    }));\n                }\n            }\n        });\n    });\n}\n","import {extend} from 'flarum/extend';\nimport DiscussionControls from 'flarum/utils/DiscussionControls';\nimport UnreadButton from './components/UnreadButton';\n\n/* global m */\n\nexport default function () {\n    extend(DiscussionControls, 'userControls', (items, discussion) => {\n        if (!discussion.attribute('whoReadCanMarkUnread')) {\n            return;\n        }\n\n        items.add('who-read-unread', m(UnreadButton, {\n            discussion,\n        }));\n    });\n}\n","import {override} from 'flarum/extend';\nimport Translator from 'flarum/Translator';\n\nexport default function () {\n    /**\n     * There is a bug in Flarum's pluralize function\n     * Explicit rules are added as keys to an array object, which is then looped through via .forEach\n     * As the array is always empty, those rules are never evaluated\n     * Additionally the values returned inside .forEach would never be returned as the function return value either\n     * https://github.com/flarum/core/issues/2062\n     */\n    override(Translator.prototype, 'pluralize', function (original, translation, number) {\n        const sPluralRegex = new RegExp(/^\\w+\\: +(.+)$/),\n            cPluralRegex = new RegExp(/^\\s*((\\{\\s*(\\-?\\d+[\\s*,\\s*\\-?\\d+]*)\\s*\\})|([\\[\\]])\\s*(-Inf|\\-?\\d+)\\s*,\\s*(\\+?Inf|\\-?\\d+)\\s*([\\[\\]]))\\s?(.+?)$/),\n            iPluralRegex = new RegExp(/^\\s*(\\{\\s*(\\-?\\d+[\\s*,\\s*\\-?\\d+]*)\\s*\\})|([\\[\\]])\\s*(-Inf|\\-?\\d+)\\s*,\\s*(\\+?Inf|\\-?\\d+)\\s*([\\[\\]])/),\n            standardRules = [],\n            explicitRules = {};\n\n        translation.split('|').forEach(part => {\n            if (cPluralRegex.test(part)) {\n                const matches = part.match(cPluralRegex);\n                explicitRules[matches[0]] = matches[matches.length - 1];\n            } else if (sPluralRegex.test(part)) {\n                const matches = part.match(sPluralRegex);\n                standardRules.push(matches[1]);\n            } else {\n                standardRules.push(part);\n            }\n        });\n\n        for (let e in explicitRules) {\n            if (explicitRules.hasOwnProperty(e) && iPluralRegex.test(e)) {\n                const matches = e.match(iPluralRegex);\n\n                if (matches[1]) {\n                    const ns = matches[2].split(',');\n\n                    for (let n in ns) {\n                        if (number === parseInt(ns[n])) {\n                            return explicitRules[e];\n                        }\n                    }\n                } else {\n                    const leftNumber = this.convertNumber(matches[4]);\n                    const rightNumber = this.convertNumber(matches[5]);\n\n                    if (('[' === matches[3] ? number >= leftNumber : number > leftNumber) &&\n                        (']' === matches[6] ? number <= rightNumber : number < rightNumber)) {\n                        return explicitRules[e];\n                    }\n                }\n            }\n        }\n\n        return standardRules[this.pluralPosition(number, this.locale)] || standardRules[0] || undefined;\n    });\n}\n"],"sourceRoot":""}